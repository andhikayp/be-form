// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Otp {
  email     String   @id @db.VarChar(100)
  otp       String   @db.VarChar(6)
  createdAt DateTime @default(now())

  @@map("otps")
}

model Corporate {
  id                     Int    @id @default(autoincrement())
  corporateAccountNumber String @db.VarChar(12)
  corporateName          String @db.VarChar(100)
  Users                  User[]

  @@map("corporates")
}

model User {
  userId         String          @id @unique @db.VarChar(30)
  username       String          @db.VarChar(100)
  corporateId    Int
  role           String          @db.VarChar(20)
  email          String          @db.VarChar(100)
  phoneNumber    String          @db.VarChar(15)
  password       String          @db.VarChar(100)
  token          String?         @unique @db.VarChar(512)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  GroupTransfers GroupTransfer[]
  Corporate      Corporate       @relation(fields: [corporateId], references: [id])

  @@map("users")
}

model GroupTransfer {
  referenceNumber String    @id @default(uuid())
  sourceAccount   String    @db.VarChar(12)
  makerUserId     String
  status          String    @db.VarChar(15)
  transferDate    DateTime?
  transferTime    String?
  instructionType String    @db.VarChar(20)
  transferType    String    @db.VarChar(20)
  createdAt       DateTime  @default(now())

  Transactions Transaction[]

  makerUser User @relation(fields: [makerUserId], references: [userId])

  @@map("group_transfers")
}

model Transaction {
  id                     Int      @id @default(autoincrement())
  amount                 Int
  groupTransferId        String   @default(uuid())
  destinationAccount     String   @db.VarChar(12)
  destinationBankName    String   @db.VarChar(50)
  destinationAccountName String   @db.VarChar(100)
  createdAt              DateTime @default(now())

  groupTransfer GroupTransfer @relation(fields: [groupTransferId], references: [referenceNumber])

  @@map("transactions")
}
